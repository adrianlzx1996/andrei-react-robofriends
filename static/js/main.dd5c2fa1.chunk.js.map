{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/CounterButton.js","components/Header.js","constants.js","containers/App.js","actions.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","id","name","email","className","alt","src","CardList","robots","map","robot","index","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","CounterButton","props","updateCount","setState","state","count","console","log","color","this","onClick","PureComponent","Header","nextProps","nextState","Component","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","connect","searchField","searchRobots","requestRobots","isPending","error","dispatch","onSearchChange","event","text","target","value","payload","onRequestRobots","fetch","res","json","data","catch","useEffect","filteredRobots","filter","toLowerCase","includes","initialState","initialStateRobots","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd5c2fa1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n\treturn (\n\t\t<div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div>\n\t\t\t{robots.map((robot, index) => (\n\t\t\t\t<Card\n\t\t\t\t\tkey={robot.id}\n\t\t\t\t\tid={robot.id}\n\t\t\t\t\tname={robot.name}\n\t\t\t\t\temail={robot.email}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n\treturn (\n\t\t<div className=\"pa2\">\n\t\t\t<input\n\t\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\t\ttype=\"search\"\n\t\t\t\tplaceholder=\"search robot\"\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = ({ children }) => {\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\toverflowY: \"scroll\",\n\t\t\t\tborder: \"5px solid black\",\n\t\t\t\theight: \"500px\",\n\t\t\t}}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;\n","import React, { PureComponent } from \"react\";\n\nclass CounterButton extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcount: 0,\n\t\t};\n\t}\n\t// shouldComponentUpdate(nextProps, nextState) {\n\t// \tif (this.state.count !== nextState.count) return true;\n\t// \treturn false;\n\t// }\n\tupdateCount = () => {\n\t\tthis.setState((state) => {\n\t\t\treturn { count: this.state.count + 1 };\n\t\t});\n\t};\n\trender() {\n\t\tconsole.log(\"CounterButton\");\n\t\treturn (\n\t\t\t<button color={this.props.color} onClick={this.updateCount}>\n\t\t\t\tCount: {this.state.count}\n\t\t\t</button>\n\t\t);\n\t}\n}\n\nexport default CounterButton;\n","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\nclass Header extends Component {\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\treturn false;\n\t}\n\trender() {\n\t\tconsole.log(\"Header\");\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className=\"f1\">RoboFriends</h1>\n\t\t\t\t<CounterButton color=\"red\" />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import React, { useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport Header from \"../components/Header\";\nimport { connect } from \"react-redux\";\nimport { requestRobots, setSearchField } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error,\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots()),\n\t};\n};\n\nfunction App(props) {\n\tconst { searchField, onSearchChange, onRequestRobots, isPending, robots } =\n\t\tprops;\n\n\tuseEffect(() => {\n\t\tonRequestRobots();\n\t}, [onRequestRobots]);\n\n\tconst filteredRobots = robots.filter((robot) => {\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t});\n\n\treturn isPending ? (\n\t\t<h1>Loading</h1>\n\t) : (\n\t\t<div className=\"tc\">\n\t\t\t<Header />\n\t\t\t<SearchBox searchChange={onSearchChange} />\n\t\t\t<Scroll>\n\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t</Scroll>\n\t\t</div>\n\t);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_FAILED,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n\ttype: CHANGE_SEARCH_FIELD,\n\tpayload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\n\n\tfetch(`https://jsonplaceholder.typicode.com/users`)\n\t\t.then((res) => res.json())\n\t\t.then((data) =>\n\t\t\tdispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data })\n\t\t)\n\t\t.catch((error) =>\n\t\t\tdispatch({ type: REQUEST_ROBOTS_FAILED, payload: error })\n\t\t);\n};\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_ROBOTS_FAILED,\n\tREQUEST_ROBOTS_PENDING,\n\tREQUEST_ROBOTS_SUCCESS,\n} from \"./constants\";\n\nconst initialState = {\n\tsearchField: \"\",\n};\n\nexport const searchRobots = (state = initialState, action = {}) => {\n\tswitch (action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn { ...state, searchField: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst initialStateRobots = {\n\tisPending: false,\n\trobots: [],\n\terror: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n\tswitch (action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn { ...state, isPending: true };\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn { ...state, isPending: false, robots: action.payload };\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn { ...state, isPending: false, error: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./containers/App\";\nimport { requestRobots, searchRobots } from \"./reducers\";\nimport \"tachyons\";\n// import { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\n// const logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}